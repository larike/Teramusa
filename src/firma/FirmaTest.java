package firma;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.*;
import static org.junit.Assert.*;
import org.junit.*;
import firma.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2017.07.19 16:42:29 // Generated by ComTest
 *
 */
public class FirmaTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa33 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa33() throws SailoException {    // Firma: 33
    Firma firma = new Firma(); 
    Asiakas matti1 = new Asiakas(), matti2 = new Asiakas(); 
    firma.lisaa(matti1); 
    firma.lisaa(matti2); 
    firma.lisaa(matti1); 
    Collection<Asiakas> loytyneet = firma.etsi("",-1); 
    Iterator<Asiakas> it = loytyneet.iterator(); 
    assertEquals("From: Firma line: 42", matti1, it.next()); 
    assertEquals("From: Firma line: 43", matti2, it.next()); 
    assertEquals("From: Firma line: 44", matti1, it.next()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTerapeutit74 */
  @Test
  public void testAnnaTerapeutit74() {    // Firma: 74
    Firma firma = new Firma(); 
    Asiakas matti1 = new Asiakas(), matti2 = new Asiakas(), matti3 = new Asiakas(); 
    matti1.rekisteroi(); matti2.rekisteroi(); matti3.rekisteroi(); 
    int id1 = matti1.getTunnusNro(); 
    int id2 = matti2.getTunnusNro(); 
    Terapeutti greta11 = new Terapeutti(id1); firma.lisaa(greta11); 
    Terapeutti greta12 = new Terapeutti(id1); firma.lisaa(greta12); 
    Terapeutti greta21 = new Terapeutti(id2); firma.lisaa(greta21); 
    Terapeutti greta22 = new Terapeutti(id2); firma.lisaa(greta22); 
    Terapeutti greta23 = new Terapeutti(id2); firma.lisaa(greta23); 
    List<Terapeutti> loytyneet; 
    loytyneet = firma.annaTerapeutit(matti3); 
    assertEquals("From: Firma line: 90", 0, loytyneet.size()); 
    loytyneet = firma.annaTerapeutit(matti1); 
    assertEquals("From: Firma line: 92", 2, loytyneet.size()); 
    assertEquals("From: Firma line: 93", true, loytyneet.get(0) == greta11); 
    assertEquals("From: Firma line: 94", true, loytyneet.get(1) == greta12); 
    loytyneet = firma.annaTerapeutit(matti2); 
    assertEquals("From: Firma line: 96", 3, loytyneet.size()); 
    assertEquals("From: Firma line: 97", true, loytyneet.get(0) == greta21); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta123 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta123() throws SailoException {    // Firma: 123
    Firma firma = new Firma(); 
    Asiakas matti1 = new Asiakas(); matti1.vastaaMattiMeikalainen(); matti1.rekisteroi(); 
    Asiakas matti2 = new Asiakas(); matti2.vastaaMattiMeikalainen(); matti2.rekisteroi(); 
    Terapeutti greta21 = new Terapeutti(); greta21.vastaaGretaHuhtoinen(matti2.getTunnusNro()); 
    Terapeutti greta11 = new Terapeutti(); greta11.vastaaGretaHuhtoinen(matti1.getTunnusNro()); 
    Terapeutti greta22 = new Terapeutti(); greta22.vastaaGretaHuhtoinen(matti2.getTunnusNro()); 
    Terapeutti greta12 = new Terapeutti(); greta12.vastaaGretaHuhtoinen(matti1.getTunnusNro()); 
    Terapeutti greta23 = new Terapeutti(); greta23.vastaaGretaHuhtoinen(matti2.getTunnusNro()); 
    String hakemisto = "testiTeramusa"; 
    File dir = new File(hakemisto); 
    File ftied  = new File(hakemisto+"/nimet.dat"); 
    File fhtied = new File(hakemisto+"/terapiat.dat"); 
    dir.mkdir(); 
    ftied.delete(); 
    fhtied.delete(); 
    try {
    firma.lueTiedostosta(hakemisto); 
    fail("Firma: 144 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    firma.lisaa(matti1); 
    firma.lisaa(matti2); 
    firma.lisaa(greta21); 
    firma.lisaa(greta11); 
    firma.lisaa(greta22); 
    firma.lisaa(greta12); 
    firma.lisaa(greta23); 
    firma.tallenna(); 
    firma = new Firma(); 
    firma.lueTiedostosta(hakemisto); 
    Collection<Asiakas> kaikki = firma.etsi("",-1); 
    Iterator<Asiakas> it = kaikki.iterator(); 
    assertEquals("From: Firma line: 158", matti1, it.next()); 
    assertEquals("From: Firma line: 159", matti2, it.next()); 
    assertEquals("From: Firma line: 160", false, it.hasNext()); 
    List<Terapeutti> loytyneet = firma.annaTerapeutit(matti1); 
    Iterator<Terapeutti> ih = loytyneet.iterator(); 
    assertEquals("From: Firma line: 163", greta11, ih.next()); 
    assertEquals("From: Firma line: 164", greta12, ih.next()); 
    assertEquals("From: Firma line: 165", false, ih.hasNext()); 
    loytyneet = firma.annaTerapeutit(matti2); 
    ih = loytyneet.iterator(); 
    assertEquals("From: Firma line: 168", greta21, ih.next()); 
    assertEquals("From: Firma line: 169", greta22, ih.next()); 
    assertEquals("From: Firma line: 170", greta23, ih.next()); 
    assertEquals("From: Firma line: 171", false, ih.hasNext()); 
    firma.lisaa(matti2); 
    firma.lisaa(greta23); 
    firma.tallenna(); 
    assertEquals("From: Firma line: 175", true, ftied.delete()); 
    assertEquals("From: Firma line: 176", true, fhtied.delete()); 
    File fbak = new File(hakemisto+"/nimet.bak"); 
    File fhbak = new File(hakemisto+"/terapiat.bak"); 
    assertEquals("From: Firma line: 179", true, fbak.delete()); 
    assertEquals("From: Firma line: 180", true, fhbak.delete()); 
    assertEquals("From: Firma line: 181", true, dir.delete()); 
  } // Generated by ComTest END
}